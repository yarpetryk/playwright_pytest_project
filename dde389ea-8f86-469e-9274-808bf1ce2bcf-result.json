{"name": "test_ip_address[chromium-1097bd711e4c]", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 5000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"Boxen\")", "trace": "self = <tests.test_device_ip_address.TestDeviceConfig object at 0x7fed98725b40>\npage = <Page url='https://portal.powerfox.energy/'>, device_id = '1097bd711e4c'\nlogin_set_up = <Page url='https://portal.powerfox.energy/'>\nstart_page = <pages.start_page.StartPage object at 0x7fed980cd720>\ndevices_page = <pages.devices_page.DevicesPage object at 0x7fed980ce440>\nassert_snapshot = <function assert_snapshot.<locals>.compare at 0x7fed96e683a0>\n\n    @pytest.mark.smoke\n    # @pytest.mark.skip_browser('chromium')\n    # @pytest.mark.only_browser('chromium')\n    # @pytest.mark.parametrize('url', [WebPageUrl.START_PAGE])\n    # @pytest.mark.parametrize('device_id', [DeviceCredentials.DEVICEID,\n    #                                        pytest.param(DeviceCredentials.DEVICEID_2, marks=pytest.mark.xfail)])\n    \n    @pytest.mark.parametrize('device_id', [DeviceCredentials.DEVICEID])\n    def test_ip_address(self,\n                        page,\n                        device_id: str,\n                        login_set_up,\n                        start_page: StartPage,\n                        devices_page: DevicesPage,\n                        assert_snapshot) -> None:\n    \n        # Proceed to devices tab\n        # assert_snapshot(page.screenshot())\n>       start_page.proceed_to_devices_tab()\n\ntests/test_device_ip_address.py:28: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages/start_page.py:36: in proceed_to_devices_tab\n    self.devices_link.click(timeout=5000)\n/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/sync_api/_generated.py:15512: in click\n    self._sync(\n/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_locator.py:160: in click\n    return await self._frame.click(self._selector, strict=True, **params)\n/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_frame.py:488: in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_connection.py:61: in send\n    return await self._connection.wrap_api_call(\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <playwright._impl._connection.Connection object at 0x7fed98726710>\ncb = <function Channel.send.<locals>.<lambda> at 0x7fed96e272e0>\nis_internal = False\n\n    async def wrap_api_call(\n        self, cb: Callable[[], Any], is_internal: bool = False\n    ) -> Any:\n        if self._api_zone.get():\n            return await cb()\n        task = asyncio.current_task(self._loop)\n        st: List[inspect.FrameInfo] = getattr(task, \"__pw_stack__\", inspect.stack())\n        parsed_st = _extract_stack_trace_information_from_stack(st, is_internal)\n        self._api_zone.set(parsed_st)\n        try:\n            return await cb()\n        except Exception as error:\n>           raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\nE           playwright._impl._errors.TimeoutError: Locator.click: Timeout 5000ms exceeded.\nE           Call log:\nE             - waiting for get_by_role(\"link\", name=\"Boxen\")\n\n/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_connection.py:528: TimeoutError"}, "steps": [{"name": "And proceed to Devices page", "status": "broken", "statusDetails": {"message": "playwright._impl._errors.TimeoutError: Locator.click: Timeout 5000ms exceeded.\nCall log:\n  - waiting for get_by_role(\"link\", name=\"Boxen\")\n\n", "trace": "  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/allure_commons/_allure.py\", line 202, in impl\n    return func(*a, **kw)\n  File \"/home/runner/work/playwright_pytest_project/playwright_pytest_project/pages/start_page.py\", line 36, in proceed_to_devices_tab\n    self.devices_link.click(timeout=5000)\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/sync_api/_generated.py\", line 15512, in click\n    self._sync(\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_sync_base.py\", line 115, in _sync\n    return task.result()\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_locator.py\", line 160, in click\n    return await self._frame.click(self._selector, strict=True, **params)\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_frame.py\", line 488, in click\n    await self._channel.send(\"click\", locals_to_params(locals()))\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_connection.py\", line 61, in send\n    return await self._connection.wrap_api_call(\n  File \"/opt/hostedtoolcache/Python/3.10.17/x64/lib/python3.10/site-packages/playwright/_impl/_connection.py\", line 528, in wrap_api_call\n    raise rewrite_error(error, f\"{parsed_st['apiName']}: {error}\") from None\n"}, "start": 1749641885932, "stop": 1749641890934}], "attachments": [{"name": "log", "source": "0bda6845-d204-4434-84d6-e28b4bd21c45-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "browser_name", "value": "'chromium'"}, {"name": "device_id", "value": "'1097bd711e4c'"}], "start": 1749641885932, "stop": 1749641890934, "uuid": "40f63f0f-403a-441b-b910-ec2d1b17bae5", "historyId": "a3b37827aaf6b795340b2d45f89a2229", "testCaseId": "d6fa6fd2c9af7b87133cf2acf698bb8f", "fullName": "tests.test_device_ip_address.TestDeviceConfig#test_ip_address", "labels": [{"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_device_ip_address"}, {"name": "subSuite", "value": "TestDeviceConfig"}, {"name": "host", "value": "fv-az1046-954"}, {"name": "thread", "value": "2926-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_device_ip_address"}]}